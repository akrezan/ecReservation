@using System.ServiceModel.Dispatcher
@model ec.Reservation.Entities.Reservation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section head
{
    @Styles.Render("~/Content/bootstrap-datetimepicker")
    @Styles.Render("~/Content/bootstrap-multiselect")
}
<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Reservation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @* @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class='col-md-5'>
                    <div class="form-group">
                        <div class='input-group date' id='StartTimeDatePicker'>
                            @Html.EditorFor(model => model.StartTime, new { htmlAttributes = new { @class = "form-control date" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.StartTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
           @*     @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control" } })*@
                <div class='col-md-5'>
                    <div class="form-group">
                        <div class='input-group date' id='EndTimeDatePicker'>
                            @Html.EditorFor(model => model.EndTime, new { htmlAttributes = new { @class = "form-control date" } })
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </div>
                </div>
                @Html.ValidationMessageFor(model => model.EndTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ResourceId, "Resource", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("ResourceId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ResourceId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatorId, "Creator", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("CreatorId", null, htmlAttributes: new { @class = "form-control" ,disabled = "disabled" })*@
                @*@Html.DropDownList("CreatorId", null, htmlAttributes: new { @class = "form-control", disabled = "disabled" })
                @Html.ValidationMessageFor(model => model.CreatorId, "", new { @class = "text-danger" })*@
                <input disabled="disabled" class="form-control" value="@Model.Creator.UserName"/>
                <input type="hidden" name="CreatorId" value="@Model.CreatorId" />
                </div>
        </div>

        
        <div class="form-group">
            @Html.LabelFor(model => model.AttendeeIds, "Attendees", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBox("AttendeeIds", null, htmlAttributes: new { @class = "form-control" , id = "getting-attendess" })
                @Html.ValidationMessageFor(model => model.AttendeeIds, "", new { @class = "text-danger" })
            </div>
        </div>
        
      
        <div class="form-group">
            @Html.LabelFor(model => model.ChecklistIds, "CheckLists", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBox("CheckListIds", null, htmlAttributes: new {@class = "form-control", multiple = "multiple", id = "getting-checklist" })
                @Html.ValidationMessageFor(model => model.ChecklistIds, "", new {@class = "text-danger"})

            </div>
        </div>
        
        @Html.HiddenFor(model => model.CreationDateTime)
        
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/moment")
    @Scripts.Render("~/bundles/bootstrap-datetimepicker")
    @Scripts.Render("~/bundles/bootstrap-multiselect")
    
    <script type="text/javascript">
        $(function () {
            $.validator.addMethod(
                "date",
                function (value, element) {
                    var testDate = moment(value, "DD.MM.YYYY");
                    console.log(testDate.isValid(), value);
                    return testDate.isValid();
                },
                "Please enter a date in the format dd/mm/yyyy"
            );

            $('input.date').rules('add', { date: true });
            $('#StartTimeDatePicker').datetimepicker({
                locale: 'de'
            });
            $('#EndTimeDatePicker').datetimepicker({
                locale: 'de',
                useCurrent: false
            });
            $("#StartTimeDatePicker").on("dp.change", function (e) {
                $('#EndTimeDatePicker').data("DateTimePicker").minDate(e.date);
                //$('#StartTime').val(e.date);
            });
            $("#EndTimeDatePicker").on("dp.change", function (e) {
                $('#StartTimeDatePicker').data("DateTimePicker").maxDate(e.date);
                //$('#EndTime').val(e.date);
            });
        });

        $(document).ready(function () {
            $('#getting-checklist').multiselect({
                includeSelectAllOption: true,
                enableFiltering: false
            });
            $('#getting-attendess').multiselect({
                includeSelectAllOption: true,
                enableFiltering: false
            });
        });
    </script>
}
